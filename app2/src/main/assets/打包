打包:就是根据签名和其他表示生成安装包
签名: 1、在android应用文件(apk)中保存一个特别字符串
      2、用来标示不同的应用开发者:开发者A、开发者B
      3、一个应用开发者开发的多款应用使用同一个签名

为什么要签名:
原因1:最简单直接的回答:系统要求的
>>>Android系统要求每一个Android应用程序必须要经过数字签名
才能安装到系统中,也就是说如果一个Android应用程序没有经过数字
签名,是没有办法安装到系统中的
原因2:
>>>不同程序员开发的应用包名可能会相同,导致一个应用覆盖另一个应用
>如果只有包名的概念,那么如果B应用于已经安装的A应用包名一样,那就实现覆盖,不合理
>而事实上是装不上B 的,它会提示存在包名一致,但是签名不一样的,这样就不会覆盖

注意:xxx.keystore/xxx.jks文件不能弄丢
     万一丢了签名文件:那用户安装时必须先卸载才能安装成功
                      应用市场上的排行就会从0开始了

Build APK(s): 构建的APK
Generate Signed APK: 生成签名的APK
Analyze APK: 分析APK

1、什么是多渠道包?
    渠道包就是要在安装包中添加渠道信息,也就是channel,对应不同的渠道,
    例如:小米市场,360市场,应用宝市场等
2、为什么要提供多渠道包?
    我们要在安装包中添加不同的标识,应用在请求网络的时候携带渠道信息,
    方便后台做运营统计(这就是添加渠道信息的用处)
3、实现多渠道打包的原理:
    一般来讲,这个渠道的标识会放在AndroidManifest.xml的Application的
    一个Metadata.然后就可以在Java中通过API获取对应的数据了.
4、如何实现?
    现在android渠道多种多样,其实渠道不仅仅局限于应用市场,一种推广方式
    也可以看做一个渠道,比如:通过人拉人的方式去推广,官网上推广,百度上推广等。
    所以说渠道成千上万,为了推广,有时候一次也会打成千的安装包,那你半天或者
    一天啥都别干了,所以借鉴一下大公司高效的打包方式:

友盟的多渠道打包:
    详细见官网:http://www.umeng.com/
    缺点:这样的打包方式效率比较低下,如果是几十个包还可以应付,打一个包快的话需要十几秒,
          慢的话需要几分钟不等,随机器性能很有关系

美团多渠道打包:
    原理: 把一个Android应用包当做zip文件包进行解压,然后发现在签名生成的目录下(META-INF)
          添加一个空文件不需要重新签名.利用这个机制,该文件的文件名就是渠道名.这种方式不
          需要重新签名等步骤,非常高效
    缺点: 1、Google如果哪天更改打包规则,使得在META-INF中建立空文件还需要重新打包,这种方
          式将不可用
         2、一些不法的渠道商很容易通过工具修改渠道,如果一个渠道商,通过网络劫持和篡改渠道
          的组合方式来获取暴利,对于程序开发者来说可能会存在着巨大的经济损失
    已经将美团的打包工具放到了tools下的test01文件中:
        1、将要打包的apk放到PythonTool中
        2、在PythonTool/info/channel.txt中写入需要的渠道,一个渠道占一行
        3、双击执行PythonTool/MultiChannelBuildTool.py文件(需要Python环境)
           就会产生渠道包
        4、获取渠道信息:将JavaUtil文件中的ChannelUtil.java拷贝到工程,调用ChannelUtil.getChannel
           即可获取渠道

360多渠道打包:
    原理: apk文件本质就是zip文件,利用zip文件"可以添加comment(摘要)"
          的数据结构特点,在文件的末尾写入任意数据,而不用重新解压zip文件,
          我们就可以将渠道信息写入摘要区
    优点: 1、5M的apk,一秒钟能打300个
          2、在下载apk的同时,服务端可以写入一些信息,例如邀请码,分享信息等
    缺点: 渠道信息也是很容易修改,虽然可以加密,只是提高了修改的门槛

    360多渠道打包工具在tools的test02文件中
        1、将要写入渠道信息的apk放入MCYTool文件夹中
        2、修改MCPTool.bat批处理文件,更改渠道和密码(渠道信息为了安全需要加密)
        3、将apk拖到MCPTool.bat上执行,将会生成渠道包
        4、修改MCPTool-check.bat中的密码和MCPTool.bat中的密码一致
        5、将渠道包拖到MCPTool-check.bat上执行,就可以减产渠道信息是否正确
        6、获取渠道:将MCPTool.java添加到工程或者将MPCTool.jar导入


